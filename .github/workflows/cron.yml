name: Schedule Docker Build te-dep-3.9

on:
  schedule:
    # Runs at 02:00 UTC every day
    - cron: '0 2 * * *'
  # Allow manual trigger
  workflow_dispatch:

env:
  JOBNAME: scheduled-build-te-dep-3.9

jobs:
  trigger-ci-on-te-base-dep-3_9:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger CI workflow for te_base_dep_3.9 branch and wait for result
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Trigger the workflow
            console.log('Triggering CI workflow...');
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ci.yml',
              ref: 'te_base_dep_3.9'
            });

            // Wait and find the run
            await new Promise(resolve => setTimeout(resolve, 10000));

            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ci.yml',
              branch: 'te_base_dep_3.9',
              per_page: 1
            });

            const run = runs.data.workflow_runs[0];
            if (!run) throw new Error('No workflow run found');

            console.log(`Waiting for run ${run.id} to complete...`);

            // Wait for completion
            let status = run.status;
            while (status !== 'completed') {
              await new Promise(resolve => setTimeout(resolve, 30000));
              const updated = await github.rest.actions.getWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: run.id
              });
              status = updated.data.status;
              console.log(`Status: ${status}`);
            }

            // Check result
            const final = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: run.id
            });

            if (final.data.conclusion !== 'success') {
              throw new Error(`CI failed: ${final.data.conclusion}`);
            }

            console.log('âœ… CI completed successfully!');
